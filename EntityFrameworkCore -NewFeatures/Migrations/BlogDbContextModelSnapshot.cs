// <auto-generated />
using EntityFrameworkCore__NewFeatures;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFrameworkCore__NewFeatures.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    partial class BlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFrameworkCore__NewFeatures.BlogEntities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogId");

                    b.ToTable("Blog");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            Name = "First Blog"
                        },
                        new
                        {
                            BlogId = 2,
                            Name = "Second Blog"
                        });
                });

            modelBuilder.Entity("EntityFrameworkCore__NewFeatures.BlogEntities.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            BlogId = 1,
                            Content = "First Post Content",
                            Title = "First Post Title"
                        },
                        new
                        {
                            PostId = 2,
                            BlogId = 1,
                            Content = "Second Post Content",
                            Title = "Second Post Title"
                        },
                        new
                        {
                            PostId = 3,
                            BlogId = 2,
                            Content = "Third Post Content",
                            Title = "Third Post Title"
                        },
                        new
                        {
                            PostId = 4,
                            BlogId = 2,
                            Content = "Fourth Post Content",
                            Title = "Fourth Post Title"
                        },
                        new
                        {
                            PostId = 5,
                            BlogId = 2,
                            Content = "Fiveth Post Content",
                            Title = "Fiveth Post Title"
                        });
                });

            modelBuilder.Entity("EntityFrameworkCore__NewFeatures.BlogEntities.Post", b =>
                {
                    b.HasOne("EntityFrameworkCore__NewFeatures.BlogEntities.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
